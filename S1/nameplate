local counter = 0
local getRange = {
    { 5,   37727 },
    { 6,   63427 },
    { 8,   34368 },
    { 10,  32321 },
    { 15,  33069 },
    { 20,  10645 },
    { 25,  24268 },
    { 30,  835 },
    { 35,  24269 },
    { 40,  28767 },
    { 45,  23836 },
    { 50,  116139 },
    { 60,  32825 },
    { 70,  41265 },
    { 80,  35278 },
    { 100, 33119 },
}

local function isUnitInRange(unit, range)
    for _, rangeData in ipairs(getRange) do
        local maxRange, itemID = unpack(rangeData)
        if maxRange == range then
            return C_Item.IsItemInRange(itemID, unit)
        end
    end
    return false
end

local function hasDebuff(unit, auraName, onlyPlayerCast)
    for j = 1, 40 do
        local auraData = C_UnitAuras.GetAuraDataByIndex(unit, j, "HARMFUL")
        if not auraData then break end
        if auraData.name == auraName then
            if onlyPlayerCast then
                return auraData.sourceUnit == "player"
            else
                return true
            end
        end
    end
    return false
end
local function hasAura(unit, auraName, onlyPlayerCast)
    for j = 1, 40 do
        local auraData = C_UnitAuras.GetAuraDataByIndex(unit, j, "HELPFUL")
        if not auraData then break end
        if auraData.name == auraName then
            if onlyPlayerCast then
                return auraData.sourceUnit == "player"
            else
                return true
            end
        end
    end
    return false
end

for i = 1, 40 do
    local unit = "nameplate" .. i
    if UnitExists(unit) and UnitCanAttack("player", unit) and isUnitInRange(unit, 10) then
        if not hasDebuff(unit, "锁喉", true) and hasAura("player", "连环屠戮", true) then
            counter = counter + 1
        end
    end
end

return counter
