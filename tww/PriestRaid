local index = 0 --输出指令，46代表选择敌人，50代表耀，51代表盾，52代表全神贯注，53代表快速治疗，55代表耐力
local lowest = 0
local lowestHealth = 100
local auraID1 = 194384 --救赎
local auraID2 = 139    --恢复
local auraID3 = 114255 --圣光涌动
local auraName1 = "真言术：韧"
local auraName2 = "救赎之魂"
local playerHealth = UnitHealth("player") / UnitHealthMax("player") * 100

-- 获取技能冷却时间的函数
local function getCooldown(spellID)
    local cooldown = C_Spell.GetSpellCooldown(spellID)
    return (cooldown.startTime > 0) and (cooldown.startTime + cooldown.duration - GetTime()) or 0
end
--获取技能充能层数的函数
local function getCharges(spellID)
    local charges = C_Spell.GetSpellCharges(spellID)
    return charges and charges.currentCharges or 0 -- 如果没有充能信息，则返回 0
end

--获取单位光环的函数
local function hasAura(unit, auraID, auraName)
    for j = 1, 40 do
        local auraData = C_UnitAuras.GetAuraDataByIndex(unit, j, "HELPFUL")
        if not auraData then break end
        if (auraData.spellId == auraID and auraData.sourceUnit == "player") or
            (auraData.name == auraName) then
            return true
        end
    end
    return false
end

-- 检查技能冷却
local GCD = getCooldown(61304)              -- 公共冷却
local Shield = getCooldown(17)              -- 真言术：盾
local Penance = getCooldown(47540)          -- 苦修
local Rapture = getCooldown(47536)          -- 全神贯注
-- 检测技能充能
local Shine = getCharges(194509)            --真言术：耀

local teammateCount = 0                     --队友数量
local RenewCount = 0                        --恢复数量
local setRenewCount = 4                     --设定恢复阈值
local setCount = 0                          --设置施放“耀”的阈值
local noRedemptionCount = 0                 --无救赎的数量
local hasSurge = hasAura("player", auraID3) --玩家圣光涌动buff

if UnitPlayerOrPetInRaid("player") then
    for i = 1, 40 do
        local unit = "raid" .. i
        if UnitExists(unit) and not UnitIsDeadOrGhost(unit) and UnitCanAssist("player", unit) and UnitInRange(unit) then
            teammateCount = teammateCount + 1                               --计数队友数量
            local unitHealth = UnitHealth(unit) / UnitHealthMax(unit) * 100 --单位生命值
            local hasAura1 = hasAura(unit, auraID1)                         --救赎
            local hasAura2 = hasAura(unit, auraID2)                         --恢复
            local hasAura3 = hasAura(unit, auraName1)                       --韧
            local hasAura4 = hasAura(unit, auraName2)                       --天使

            --根据队友数量决定是否施放耀
            if teammateCount > 1 then
                if teammateCount <= 5 then
                    setCount = 2
                elseif teammateCount <= 10 then
                    setCount = 3
                elseif teammateCount <= 15 then
                    setCount = 4
                else
                    setCount = 5
                end
            end

            if hasAura2 then --统计恢复数量
                RenewCount = RenewCount + 1
            end
            if not hasAura1 and unitHealth < 90 then --统计无救赎的数量
                noRedemptionCount = noRedemptionCount + 1
            end

            if not hasAura1 and not hasAura4 then --无救赎的最低生命值和单位ID
                if unitHealth < lowestHealth then
                    lowestHealth = unitHealth
                    lowest = i + 5
                    local UIU = UnitIsUnit("player", lowest)
                    if noRedemptionCount >= setCount then
                        if Shine >= 1 then
                            if UIU then
                                index = 50
                            else
                                index = lowest
                            end
                        elseif Shine == 0 then
                            if Rapture > GCD and Shield > GCD and not hasSurge and RenewCount >= setRenewCount then
                                index = 46
                            elseif Shield < GCD then
                                if UIU then
                                    index = 51
                                else
                                    index = lowest
                                end
                            elseif Rapture < GCD then
                                if UIU then
                                    index = 52
                                else
                                    index = lowest
                                end
                            elseif hasSurge then
                                if UIU then
                                    index = 53
                                else
                                    index = lowest
                                end
                            end
                        end
                    end
                    if noRedemptionCount < setCount and noRedemptionCount > 0 then
                        if Rapture > GCD and Shield > GCD and not hasSurge and RenewCount >= setRenewCount then
                            index = 46
                        elseif Shield < GCD then
                            if UIU then
                                index = 51
                            else
                                index = lowest
                            end
                        elseif Rapture < GCD then
                            if UIU then
                                index = 52
                            else
                                index = lowest
                            end
                        elseif hasSurge then
                            if UIU then
                                index = 53
                            else
                                index = lowest
                            end
                        end
                    end
                end
            end
            if UnitAffectingCombat("player") and not hasAura3 then --不在战斗中和没有耐力光环
                index = 55
            end
        end
    end
elseif UnitPlayerOrPetInParty("player") then
    for i = 1, 4 do
        local unit = "party" .. i
        if UnitExists(unit) and not UnitIsDeadOrGhost(unit) and UnitCanAssist("player", unit) and UnitInRange(unit) then
            local unitHealth = UnitHealth(unit) / UnitHealthMax(unit) * 100 --单位生命值
            local hasAura1 = hasAura(unit, auraID1)                         --救赎
            local hasAura3 = hasAura(unit, auraName1)                       --韧

            if not hasAura1 and unitHealth < 90 then                        --计数（无救赎，生命值低于90）
                noRedemptionCount = noRedemptionCount + 1
            end


            if UnitAffectingCombat("player") and not hasAura3 then
                index = 55
            end
        end
    end

    if not hasAura("player", auraName1) and playerHealth < lowestHealth then
        index = 1
    end
    if UnitAffectingCombat("player") and not hasAura("player", auraName1) then
        index = 55
    end
end

if UnitAffectingCombat("player") and not hasAura("player", auraName1) then
    index = 55
end

return index
